#!/bin/sh
set -e

echo "========================================="
echo "üöÄ Ferraco CRM - Iniciando Aplica√ß√£o"
echo "========================================="
echo "üì¶ Ambiente: $NODE_ENV"
echo "üê≥ Porta: $PORT"
echo "========================================="

# Criar diret√≥rio de uploads se n√£o existir
echo "üìÅ Criando diret√≥rio de uploads..."
mkdir -p /app/uploads
chmod 755 /app/uploads
echo "‚úÖ Diret√≥rio de uploads criado"

# Criar diret√≥rios necess√°rios
mkdir -p /app/data /app/logs

# Migrar banco de dados (Prisma) - pular se DATABASE_URL n√£o estiver configurado
if [ -n "$DATABASE_URL" ]; then
  echo "üìä Criando/Atualizando estrutura do banco de dados..."
  cd /app/backend

  # Executar migrations pendentes (SEGURO - n√£o perde dados)
  echo "üìä Aplicando migrations pendentes..."
  npx prisma migrate deploy 2>&1 || {
    echo "‚ö†Ô∏è  Aviso: Erro ao aplicar migrations"
    echo "‚ÑπÔ∏è  Se o banco est√° vazio, executando db push..."
    npx prisma db push --skip-generate 2>&1 || echo "‚ö†Ô∏è  Aviso: Falha ao criar tabelas"
  }

  # Seed do banco (apenas se estiver vazio)
  echo "üå± Verificando se precisa popular banco de dados..."
  # Verifica se j√° existe algum usu√°rio antes de fazer seed
  USER_COUNT=$(echo "SELECT COUNT(*) as count FROM users;" | npx prisma db execute --stdin 2>/dev/null | grep -oE '[0-9]+' | tail -1 || echo "0")
  if [ "$USER_COUNT" = "0" ]; then
    echo "üìù Banco vazio - executando seed..."
    npx prisma db seed 2>&1 || echo "‚ö†Ô∏è  Aviso: Falha no seed"
  else
    echo "‚úÖ Banco j√° populado ($USER_COUNT usu√°rios) - pulando seed"
  fi
else
  echo "‚ö†Ô∏è  DATABASE_URL n√£o configurado - pulando migra√ß√µes"
fi

# Iniciar Nginx (como root - necess√°rio)
echo "üåê Iniciando Nginx..."
nginx

# Iniciar Backend (TypeScript via tsx) como usu√°rio node (seguran√ßa)
echo "‚öôÔ∏è  Iniciando Backend API..."
cd /app/backend
su node -s /bin/sh -c "npx tsx src/server.ts" &
BACKEND_PID=$!

echo ""
echo "========================================="
echo "‚úÖ Ferraco CRM Iniciado com Sucesso!"
echo "========================================="
echo "üåê Frontend: http://localhost:$PORT"
echo "üîå Backend API: http://localhost:$PORT/api"
echo "ü©∫ Health Check: http://localhost:$PORT/health"
echo "========================================="

# Aguardar processo do backend
wait $BACKEND_PID
