#!/bin/sh
set -e

echo "========================================="
echo "üöÄ Ferraco CRM - Iniciando Aplica√ß√£o"
echo "========================================="
echo "üì¶ Ambiente: $NODE_ENV"
echo "üê≥ Porta: $PORT"
echo "========================================="

# Criar diret√≥rios necess√°rios
mkdir -p /app/data /app/logs

# Migrar banco de dados (Prisma) - pular se DATABASE_URL n√£o estiver configurado
if [ -n "$DATABASE_URL" ]; then
  echo "üìä Criando/Atualizando estrutura do banco de dados..."
  cd /app/backend

  # Usar prisma db push em vez de migrate deploy (cria tabelas sem migration files)
  npx prisma db push --accept-data-loss 2>&1 || echo "‚ö†Ô∏è  Aviso: Falha ao criar tabelas"

  # Seed do banco (apenas se estiver vazio)
  echo "üå± Verificando se precisa popular banco de dados..."
  npx prisma db seed 2>&1 || echo "‚ÑπÔ∏è  Seed n√£o executado (banco j√° populado ou seed n√£o configurado)"
else
  echo "‚ö†Ô∏è  DATABASE_URL n√£o configurado - pulando migra√ß√µes"
fi

# Iniciar Nginx (como root - necess√°rio)
echo "üåê Iniciando Nginx..."
nginx

# Iniciar Backend (TypeScript via tsx) como usu√°rio node (seguran√ßa)
echo "‚öôÔ∏è  Iniciando Backend API..."
cd /app/backend
su node -s /bin/sh -c "npx tsx src/server.ts" &
BACKEND_PID=$!

echo ""
echo "========================================="
echo "‚úÖ Ferraco CRM Iniciado com Sucesso!"
echo "========================================="
echo "üåê Frontend: http://localhost:$PORT"
echo "üîå Backend API: http://localhost:$PORT/api"
echo "ü©∫ Health Check: http://localhost:$PORT/health"
echo "========================================="

# Aguardar processo do backend
wait $BACKEND_PID
