version: '3.8'

services:
  # Frontend React + Vite
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_TIMESTAMP=${BUILD_TIMESTAMP:-}
    container_name: ferraco-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3050}:80"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://localhost:${BACKEND_PORT:-3051}/api
      - VITE_APP_NAME=Ferraco CRM
    networks:
      - ferraco-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Node.js + Prisma + SQLite
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - BUILD_TIMESTAMP=${BUILD_TIMESTAMP:-}
    container_name: ferraco-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-3051}:3000"
    volumes:
      # Database volume para persistência
      - ./backend/data:/app/data
      # Uploads volume para arquivos
      - ./backend/uploads:/app/uploads
      # Logs volume para debugging
      - ./backend/logs:/app/logs
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=file:./data/ferraco.db
      - JWT_SECRET=${JWT_SECRET:-ferraco_jwt_secret_change_in_production}
      - CORS_ORIGIN=http://localhost:${FRONTEND_PORT:-3050}
    networks:
      - ferraco-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  proxy:
    image: nginx:alpine
    container_name: ferraco-proxy
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-3052}:80"
    volumes:
      # Configuração do nginx
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Logs do nginx
      - ./nginx-logs:/var/log/nginx
      # SSL certificates (para HTTPS no futuro)
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - ferraco-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/api/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backup automático (opcional)
  backup:
    image: alpine:latest
    container_name: ferraco-backup
    restart: "no"
    volumes:
      - ./backend/data:/source/data:ro
      - ./backend/uploads:/source/uploads:ro
      - ./backups:/backups
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        mkdir -p /backups &&
        TIMESTAMP=$$(date +%Y%m%d_%H%M%S) &&
        sqlite3 /source/data/ferraco.db \".backup /backups/ferraco_$$TIMESTAMP.db\" &&
        tar -czf /backups/uploads_$$TIMESTAMP.tar.gz -C /source uploads &&
        echo \"Backup completo: $$TIMESTAMP\" &&
        find /backups -name '*.db' -mtime +30 -delete &&
        find /backups -name '*.tar.gz' -mtime +30 -delete
      "
    networks:
      - ferraco-network
    profiles:
      - backup

# Rede interna para comunicação entre containers
networks:
  ferraco-network:
    driver: bridge
    name: ferraco-crm

# Volumes nomeados para backup fácil
volumes:
  ferraco-data:
    driver: local
  ferraco-uploads:
    driver: local
  ferraco-logs:
    driver: local